{"version":3,"file":"static/js/149.922d728b.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Table.js","routes/Cart.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","\r\n/* eslint-disable */\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeName, increase } from './../store/userSlice.js';\r\nimport { addCount,subtractCount } from './../store.js';\r\nimport { memo, useState } from 'react';\r\nimport { Button, Container, Nav, Navbar, Row, Col, Form, Modal,Table  } from 'react-bootstrap';\r\n\r\n\r\n\r\n// function Child () {\r\n//     console.log(\"memo: Child가 변경될때만 재랜더링 되게함 \");\r\n//     return<div>자식임</div>\r\n// }\r\n\r\n// let Child = memo( function(){\r\n//     console.log(\"memo: props 데이터로 인해 Child가 변경될때만 재랜더링 되게함 \");\r\n//     return<div>자식임</div>\r\n// })\r\n\r\n// function 함수(){\r\n//     console.log(\"state 값이 바뀔때 함수실행 \");\r\n//     return 반복문 10억번 돌린결과\r\n// }\r\n\r\n\r\n\r\nfunction Cart() {\r\n\r\n    // let a = useSelector((state)=> { return state.user })\r\n    // console.log(a);\r\n    // let a = useSelector((state)=> state)\r\n    // console.log(a);\r\n\r\n    let state = useSelector((state) => { return state })\r\n    let dispathch = useDispatch()\r\n        //useDispatch 는 store로 보내주는 함수임\r\n    // let [count, setCount] = useState(0);\r\n\r\n    // let result = useMemo(()=> {return 함수()}, [state])\r\n\r\n    let loginid = localStorage.getItem('member');\r\n\r\n    //console.log(a);\r\n    //console.log(\"id값은\" + state.cart[0].id)\r\n    //console.log(\"길이는\" + state.cart.length)\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <div className=\"margin-top-control\">\r\n            {/* <Child></Child>\r\n            <button onClick={()=> setCount(count+1)}>+</button> */}\r\n            {/* <h4>{state.user.name} 의 장바구니</h4> */}\r\n\r\n            <h4> 장바구니 </h4>\r\n\r\n            {/* <h4>나이는 : {state.user.age} 살 입니다.</h4>\r\n            <button onClick={() => {\r\n                dispathch(increase(100))\r\n            }}>버튼</button> */}\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>상품명</th>\r\n                        <th>수량</th>\r\n                        <th>변경하기</th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    state.cart.map(function (a, i) {\r\n\r\n\r\n\r\n                        return (\r\n                            <tbody>\r\n                                <tr>\r\n                                    \r\n                                    <td>{state.cart[i].name}</td>\r\n                                    <td>{state.cart[i].count}</td>\r\n                                    <td><Button variant=\"outline-success\" onClick={() => {\r\n                                        dispathch(addCount(state.cart[i].id))\r\n                                    }}>+</Button>\r\n                                    &nbsp;\r\n                                      <Button variant=\"outline-success\" onClick={() => {\r\n                                        dispathch(subtractCount(state.cart[i].id))\r\n                                    }}>-</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        )\r\n                    })\r\n\r\n                }\r\n            </Table>\r\n            <div className=\"text-right\">\r\n            <Button variant=\"secondary\" onClick = {()=> { handleShow() }}>주문하기</Button>\r\n            </div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>주문이 완료 되었습니다.</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>주문 상품</th>\r\n                        <th>상품 개수</th>\r\n                    </tr>\r\n                </thead>\r\n                    {\r\n                    state.cart.map(function (a, i) {\r\n                        return (\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>{state.cart[i].name} </td>\r\n                                    <td>{state.cart[i].count} 개</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        )\r\n                    })\r\n\r\n                }\r\n                    </Table>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default Cart"],"names":["React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_jsx","responsiveClass","children","state","useSelector","dispathch","useDispatch","localStorage","getItem","show","setShow","useState","handleClose","_jsxs","Table","cart","map","a","i","name","count","Button","onClick","addCount","id","subtractCount","Modal","onHide","Header","closeButton","Title","Body","Footer"],"sourceRoot":""}